Banerjee 2007
" Co-clustering is desirable over traditional "single-sided" clustering from number of perspectives:
    1. Simulatneous grouping of row and column clusters is more informative and digestible. Co-clustering provides compressed representations taht are easilly interpretable while preserving most of the information contained in the original data, which makes it valuable to a large class of statistical data analysis applications.
    2. A row (or column) clustering can be thought of as dimensionality reduction along the rows (or columns). Simultaneous clustering along rows and columns reduces dimensionality along both axes, thus leading to a statistical problem with dramatically smaller number of parameters and hence, a much more compact representation for subsequent analysis. Since co-clustering incorporates row clustering information into column clustering and vice versa. one can think of it as a "statistical regulation" technique that can yield better quality clusters even if one is primarily interested in single-sided clustering. The statistical regularization effect of co-clustering is extremely important when dealing with large, sparse data matrices, for example, those arising in text mining. A similar intuition can be drawn from subspace clustering methods (Parsons et al. 2004), which only use a part of the full potential of the co-clustering methodology.
    3. As the size of data matrices increases, so does the need for scalable clustering algorithms. Single-sided, geometric clustering algorithms such as kmeans and its variants have computation time proportional to mnk per iteration, where m is the number of rows, n is the number of columns and k is the number of row clusters. Co-clustering algorithms based on similar iterative process, on the other hand, involve optimizing over a smaller number of parameters, and can relax this dependence to O(mkl + nkl) where m, n and k are defined as before and l is the number of column clusters. Since the number of row and column clusters is usually much smaller than the original number of rows and columns, co-clustering can lead to substantial reduction in running time (for example, Dhillon et al 2003b, Rohwer and Freitag 2004).

